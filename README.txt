Electronic voting is one of the most interesting application of modern cryptography. It integrates a wide selection of cryptographic tools into one coherent secure system that serves millions of users. We have decided to delve deep in implementing this project and examine how different parts of cryptography can build on each other to solve a real world problem.

The voting protocol seems fairly straightforward with will defined steps, however, the challenge comes in mapping and implementing the right tools at each step and integrating these tools together securely. Moreover, there are several issue that need to be addressed to limit the control of the CTF over the users votes. More specifically, the CTF might votes on behalf voters who never voted or even worse, changes a voter vote. In addition, there are some potential vulnerabilities when some of the protocol steps are not being authenticated. For example, it would be possible for an attacker to impersonate another user by just sending a valid identification number along a vote and there is no way for the CTF to distinguish that.

Our system will be based on the client-server model of interaction. The CTF will be at the server side communicating with several daemon programs that handle the heavy cryptographic workloads of the CTF, as well as interact with a database that is used to record the votes. On the client side, every voter will securely download an application from the CTF website that will manage all they cryptographic functions during the protocol step providing the voters with a user friendly interface.

Our solution will be unique in that where will not require a trusted third party other than the CTF, yet still prevent potential attacks that can be taken by the CTF. We plan to leverage a different security mechanisms such as public key system to provide this increased security. We will introduce a "receipt" that is sent by the CTF for each voter when she votes as a proof of voting. In this way, the CTF cannot change any voter's voting. Furthermore, to prevent some of the man in the middle type attacks, we will require that messages at various stages in the protocol to be signed as well as using a secure connection between voters and the CTF. In addition, we will use unpredicted identifiers for voters to choose anonymously from using the mental poker protocol. In this way, both parties can be confident who they are communicating with and are not being intercepted by a man in the middle.

This project will require several different aspects of cryptography, such as public key cryptography, mental poker, and others and these all require arithmetic with large numbers. Rather than implement this functionality ourselves, we plan to use the GNU Multiple Precision, or GMP, library. We will also be using an SSL library, such as OpenSSL to manage the secure connections as well.